<?xml version="1.0" encoding="UTF-8"?>
<persistence version="2.2"
             xmlns="http://xmlns.jcp.org/xml/ns/persistence"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/persistence
     http://xmlns.jcp.org/xml/ns/persistence/persistence_2_2.xsd">

    <persistence-unit name="HypersistenceOptimizer">

        <description>
            Hypersistence Optimizer is a dynamic analyzing tool that can scan
            your JPA and Hibernate application and provide you tips about the
            changes you need to make to entity mappings, configurations, queries,
            and Persistence Context actions to speed up your data access layer.

            By default, Hibernate is capable of finding the JPA entity classes based
            on the presence of the @Entity annotation, so you donâ€™t need to declare the entity classes.
        </description>

        <provider>org.hibernate.jpa.HibernatePersistenceProvider</provider>

        <exclude-unlisted-classes>false</exclude-unlisted-classes>

        <properties>
           <property name="hibernate.dialect" value="org.hibernate.dialect.PostgreSQL94Dialect" />
           <property name="javax.persistence.jdbc.driver" value="org.postgresql.Driver" />
           <property name="javax.persistence.jdbc.url" value="jdbc:postgresql://localhost:5432/your-db" />
           <property name="javax.persistence.jdbc.user" value="your-user" />
           <property name="javax.persistence.jdbc.password" value="your-password" />
        </properties>
    </persistence-unit>
</persistence>